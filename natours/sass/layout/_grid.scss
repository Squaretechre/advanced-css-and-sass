/*
    Row will have a height of 0 because all child elements are floated.
    Use clearfix to sort this.
*/
.row {
    /*
        Standard to use grid with max-width of 1140px.
        If we have enough available space then use max-width specified.
        If not, the view port < 1140px, then fill 100% of space that it has.
    */ 
    max-width: $grid-width;
    background-color: #eee;

    /*
        Center a block element inside of another block element.
        CSS calculates same left & right margin when set to auto.
    */
    margin: 0 auto;

    /* Select everything except for the last child. */
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    @include clearfix;

    /*
        Select all where class attribute starts with "col-".
        ^   = starts with.
        $   = ends with.
        *   = contains.
    */
    [class^="col-"] {
        background-color: orangered;
        float: left;
        
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        /* Have to wrap Sass variables in ${} inside of calc. */
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - (#{$gutter-horizontal}) * 2) / 3);
    }

    .col-2-of-3 {
        width: calc(
            2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal} 
        );
    }

    .col-1-of-4 {
        width: calc((100% - (#{$gutter-horizontal}) * 3) / 4);
    }

    .col-2-of-4 {
        width: calc(
            2 * ((100% - (#{$gutter-horizontal}) * 3) / 4) + #{$gutter-horizontal}
        );
    }

    .col-3-of-4 {
        width: calc(
            3 * ((100% - (#{$gutter-horizontal}) * 3) / 4) + (2 * #{$gutter-horizontal})
        );
    }
}